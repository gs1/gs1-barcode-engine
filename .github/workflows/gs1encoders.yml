name: GS1 Encoders CI

on:
  push:
  pull_request:

jobs:

  #
  #  CI jobs
  #

  ci-clang:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: clang CI
      working-directory: src
      run: |
        make lib CC=clang
        make app CC=clang
        LD_LIBRARY_PATH=. ./gs1encoders.bin --version
        make app-static CC=clang
        ./gs1encoders-linux.bin --version

  ci-gcc:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: gcc CI
      working-directory: src
      run: |
        make lib CC=gcc
        make app CC=gcc
        LD_LIBRARY_PATH=. ./gs1encoders.bin --version
        make app-static CC=gcc
        ./gs1encoders-linux.bin --version

  ci-msvc:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v2
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: MSVC CI
      working-directory: src
      run: |
        msbuild /p:Configuration=release gs1encoders.sln
        gs1encoders-app\x64\Release\gs1encoders-app.exe --version


  #
  #  Production builds
  #

  build-release-windows:

    if: startsWith(github.ref, 'refs/tags/')

    needs:
      - ci-gcc
      - ci-clang
      - ci-msvc

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v2

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Windows release build
      working-directory: src
      run: |
        msbuild /p:Configuration=release gs1encoders.sln
        gs1encoders-app\x64\Release\gs1encoders-app.exe --version

    - name: ZIP development libs
      working-directory: src/x64/Release
      run: |
        7z a gs1encoders-windows-libs.zip gs1encoders.h gs1encoders.lib gs1encoders.dll

    - name: ZIP application
      working-directory: src/gs1encoders-app/x64/Release
      run: |
        7z a gs1encoders-windows-app.zip gs1encoders-app.exe gs1encoders.dll

    - name: Store Windows development libs
      uses: actions/upload-artifact@v2
      with:
        name: windows-libs
        path: src/x64/Release/gs1encoders-windows-libs.zip

    - name: Store Windows app
      uses: actions/upload-artifact@v2
      with:
        name: windows-app
        path: src/gs1encoders-app/x64/Release/gs1encoders-windows-app.zip


  build-release-linux:

    if: startsWith(github.ref, 'refs/tags/')

    needs:
      - ci-gcc
      - ci-clang
      - ci-msvc

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Linux release build
      working-directory: src
      run: |
        make CC=clang
        ./gs1encoders-linux.bin --version

    - name: Store Linux build
      uses: actions/upload-artifact@v2
      with:
        name: linux-app
        path: src/gs1encoders-linux.bin


  #
  #  Create release and upload artifacts
  #

  create-release:

    runs-on: ubuntu-latest

    needs:
      - build-release-linux
      - build-release-windows

    steps:

    - name: Load Windows libs
      uses: actions/download-artifact@v2
      with:
        name: windows-libs

    - name: Load Windows app
      uses: actions/download-artifact@v2
      with:
        name: windows-app

    - name: Load Linux app
      uses: actions/download-artifact@v2
      with:
        name: linux-app

    - name: Get version
      id: get_version
      run: |
        VERSION=${GITHUB_REF/refs\/tags\//}
        echo ::set-output name=VERSION::$VERSION

    - name: Create GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: "Upload asset: Windows development libs"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: gs1encoders-windows-libs.zip
        asset_name: gs1encoders-windows-libs.zip
        asset_content_type: application/zip

    - name: "Upload asset: Windows application"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: gs1encoders-windows-app.zip
        asset_name: gs1encoders-windows-app.zip
        asset_content_type: application/zip

    - name: "Upload asset: Linux bin"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: gs1encoders-linux.bin
        asset_name: gs1encoders-linux.bin
        asset_content_type: application/octet-stream

